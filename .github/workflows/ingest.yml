name: Ingest Reddit Sentiment (AI, hourly 12–20 Toronto)

on:
  schedule:
    - cron: "0 * * * *"        # every hour (UTC); we gate to 12–20 Toronto below
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: reddit-ai-ingest
  cancel-in-progress: false

jobs:
  ingest:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      TZ: America/Toronto
      MODEL_ID: distilbert-base-uncased-finetuned-sst-2-english
      TOKENIZERS_PARALLELISM: "false"
      TRANSFORMERS_NO_ADVISORY_WARNINGS: "1"
      HF_HOME: ~/.cache/huggingface
      PYTHONUNBUFFERED: "1"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Cache HuggingFace models
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface
          key: hf-${{ runner.os }}-${{ env.MODEL_ID }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            hf-${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install -U pip
          pip install -r requirements.txt

      - name: Gate: run only 12:00–20:00 Toronto time
        id: gate
        run: |
          H=$(date +%H); echo "Hour(Toronto)=$H"
          if [ "$H" -ge 12 ] && [ "$H" -le 20 ]; then
            echo "run=true" >> $GITHUB_OUTPUT
          else
            echo "run=false" >> $GITHUB_OUTPUT
          fi

      - name: Write config.yaml from secrets (and assets)
        if: steps.gate.outputs.run == 'true'
        run: |
          cat > config.yaml <<'YAML'
          reddit:
            client_id: ${{ secrets.REDDIT_CLIENT_ID }}
            client_secret: ${{ secrets.REDDIT_CLIENT_SECRET }}
            user_agent: reddit-sentiment-app/0.1 by ${{ github.repository_owner }}
          assets:
            tickers: [AAPL, MSFT, NVDA, TSLA, GOOGL, AMZN, META]
            brands:  [Apple, Microsoft, Nvidia, Tesla, Google, Amazon, Meta]
            crypto:  [BTC, ETH, bitcoin, ethereum]
          settings:
            reddit_poll_minutes: 30
            max_reddit_posts: 200
          YAML

      - name: Run collector with AI
        if: steps.gate.outputs.run == 'true'
        run: |
          python ingestion/orchestrator.py --mode once --with-ai --model "$MODEL_ID" --batch-size 8

      - name: Vacuum DB (shrink file)
        if: steps.gate.outputs.run == 'true'
        run: |
          python - <<'PY'
          import sqlite3, os
          db='data/sentiment.db'
          if os.path.exists(db):
              con=sqlite3.connect(db); con.execute('VACUUM'); con.close()
          PY

      - name: Upload DB as artifact
        if: steps.gate.outputs.run == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: sentiment-db
          path: data/sentiment.db
          if-no-files-found: ignore

      - name: Commit DB updates
        if: steps.gate.outputs.run == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -f data/sentiment.db data/raw || true
          git commit -m "chore(data): hourly AI refresh [skip ci]" || echo "No changes"
          git push
